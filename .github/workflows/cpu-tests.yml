name: CPU tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, "carmocca/*"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

defaults:
  run:
    shell: bash

env:
  HF_TOKEN: ${{ secrets.HF_TOKEN }}

jobs:
  cpu-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {os: "macOS-12", python-version: "3.10"}
          - {os: "ubuntu-22.04", python-version: "3.11"}
          - {os: "ubuntu-22.04", python-version: "3.10"}
          - {os: "ubuntu-22.04", python-version: "3.9"}
          - {os: "ubuntu-20.04", python-version: "3.8"}
          - {os: "windows-2022", python-version: "3.10"}
    timeout-minutes: 25

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: |
          requirements.txt
          requirements-all.txt
          setup.py

    - name:  Install uv
      run: |
        # Set the VIRTUAL_ENV variable for uv to work
        # https://github.com/astral-sh/uv/issues/1526
        echo "VIRTUAL_ENV=${Python_ROOT_DIR}" >> $GITHUB_ENV
        curl -LsSf https://astral.sh/uv/install.sh | sh

    - name: Install minimal dependencies
      run: |
        uv pip install -r requirements.txt
        uv pip list
        # make sure all modules are importable
        modules=$(
          find * -type f -name "*.py" | \
          grep -v tests | grep "/" | grep -v lm_eval | grep -v xla | grep -v prepare_slimpajama | grep -v prepare_starcoder | \
          sed 's/\.py$//' | sed 's/\//./g' | \
          sed 's/.__init__//g' | xargs -I {} echo "import {};"
        )
        echo "$modules"
        python -c "$modules"

    - name: Install all dependencies
      run: |
        uv pip install -r requirements-all.txt pytest pytest-rerunfailures pytest-timeout transformers>=4.38.0 einops protobuf
        uv pip list

    - name: Run tests without the package installed
      run: |
        pytest -v --disable-pytest-warnings --strict-markers --color=yes --timeout 120

    - name: Run tests
      run: |
        uv pip install . --no-deps

        pytest -v --disable-pytest-warnings --strict-markers --color=yes --timeout 120
